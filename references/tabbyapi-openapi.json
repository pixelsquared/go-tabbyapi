{
    "openapi": "3.1.0",
    "info": {
        "title": "TabbyAPI",
        "summary": "An OAI compatible exllamav2 API that's both lightweight and fast",
        "version": "0.1.0"
    },
    "paths": {
        "/v1/completions": {
            "post": {
                "summary": "Completion Request",
                "description": "Generates a completion from a prompt.\n\nIf stream = true, this returns an SSE stream.",
                "operationId": "completion_request_v1_completions_post",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompletionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompletionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/chat/completions": {
            "post": {
                "summary": "Chat Completion Request",
                "description": "Generates a chat completion from a prompt.\n\nIf stream = true, this returns an SSE stream.",
                "operationId": "chat_completion_request_v1_chat_completions_post",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatCompletionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatCompletionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/embeddings": {
            "post": {
                "summary": "Embeddings",
                "operationId": "embeddings_v1_embeddings_post",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbeddingsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmbeddingsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "summary": "Healthcheck",
                "description": "Get the current service health status",
                "operationId": "healthcheck_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthCheckResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/.well-known/serviceinfo": {
            "get": {
                "summary": "Service Info",
                "operationId": "service_info__well_known_serviceinfo_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/v1/model/list": {
            "get": {
                "summary": "List Models",
                "description": "Lists all models in the model directory.\n\nRequires an admin key to see all models.",
                "operationId": "list_models_v1_model_list_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/models": {
            "get": {
                "summary": "List Models",
                "description": "Lists all models in the model directory.\n\nRequires an admin key to see all models.",
                "operationId": "list_models_v1_models_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/model": {
            "get": {
                "summary": "Current Model",
                "description": "Returns the currently loaded model.",
                "operationId": "current_model_v1_model_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelCard"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/props": {
            "get": {
                "summary": "Model Props",
                "description": "Returns specific properties of a model for clients.\n\nTo get all properties, use /v1/model instead.",
                "operationId": "model_props_props_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelPropsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/model/draft/list": {
            "get": {
                "summary": "List Draft Models",
                "description": "Lists all draft models in the model directory.\n\nRequires an admin key to see all draft models.",
                "operationId": "list_draft_models_v1_model_draft_list_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/model/load": {
            "post": {
                "summary": "Load Model",
                "description": "Loads a model into the model container. This returns an SSE stream.",
                "operationId": "load_model_v1_model_load_post",
                "parameters": [
                    {
                        "name": "x-admin-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Admin-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelLoadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelLoadResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/model/unload": {
            "post": {
                "summary": "Unload Model",
                "description": "Unloads the currently loaded model.",
                "operationId": "unload_model_v1_model_unload_post",
                "parameters": [
                    {
                        "name": "x-admin-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Admin-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/download": {
            "post": {
                "summary": "Download Model",
                "description": "Downloads a model from HuggingFace.",
                "operationId": "download_model_v1_download_post",
                "parameters": [
                    {
                        "name": "x-admin-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Admin-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DownloadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DownloadResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lora/list": {
            "get": {
                "summary": "List All Loras",
                "description": "Lists all LoRAs in the lora directory.\n\nRequires an admin key to see all LoRAs.",
                "operationId": "list_all_loras_v1_lora_list_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoraList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/loras": {
            "get": {
                "summary": "List All Loras",
                "description": "Lists all LoRAs in the lora directory.\n\nRequires an admin key to see all LoRAs.",
                "operationId": "list_all_loras_v1_loras_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoraList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lora": {
            "get": {
                "summary": "Active Loras",
                "description": "Returns the currently loaded loras.",
                "operationId": "active_loras_v1_lora_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoraList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lora/load": {
            "post": {
                "summary": "Load Lora",
                "description": "Loads a LoRA into the model container.",
                "operationId": "load_lora_v1_lora_load_post",
                "parameters": [
                    {
                        "name": "x-admin-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Admin-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoraLoadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoraLoadResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lora/unload": {
            "post": {
                "summary": "Unload Loras",
                "description": "Unloads the currently loaded loras.",
                "operationId": "unload_loras_v1_lora_unload_post",
                "parameters": [
                    {
                        "name": "x-admin-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Admin-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/model/embedding/list": {
            "get": {
                "summary": "List Embedding Models",
                "description": "Lists all embedding models in the model directory.\n\nRequires an admin key to see all embedding models.",
                "operationId": "list_embedding_models_v1_model_embedding_list_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/model/embedding": {
            "get": {
                "summary": "Get Embedding Model",
                "description": "Returns the currently loaded embedding model.",
                "operationId": "get_embedding_model_v1_model_embedding_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelCard"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/model/embedding/load": {
            "post": {
                "summary": "Load Embedding Model",
                "operationId": "load_embedding_model_v1_model_embedding_load_post",
                "parameters": [
                    {
                        "name": "x-admin-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Admin-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbeddingModelLoadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModelLoadResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/model/embedding/unload": {
            "post": {
                "summary": "Unload Embedding Model",
                "description": "Unloads the current embedding model.",
                "operationId": "unload_embedding_model_v1_model_embedding_unload_post",
                "parameters": [
                    {
                        "name": "x-admin-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Admin-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/token/encode": {
            "post": {
                "summary": "Encode Tokens",
                "description": "Encodes a string or chat completion messages into tokens.",
                "operationId": "encode_tokens_v1_token_encode_post",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenEncodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenEncodeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/token/decode": {
            "post": {
                "summary": "Decode Tokens",
                "description": "Decodes tokens into a string.",
                "operationId": "decode_tokens_v1_token_decode_post",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenDecodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenDecodeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/permission": {
            "get": {
                "summary": "Key Permission",
                "description": "Gets the access level/permission of a provided key in headers.\n\nPriority:\n- X-admin-key\n- X-api-key\n- Authorization",
                "operationId": "key_permission_v1_auth_permission_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthPermissionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/template/list": {
            "get": {
                "summary": "List Templates",
                "description": "Get a list of all templates.\n\nRequires an admin key to see all templates.",
                "operationId": "list_templates_v1_template_list_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/templates": {
            "get": {
                "summary": "List Templates",
                "description": "Get a list of all templates.\n\nRequires an admin key to see all templates.",
                "operationId": "list_templates_v1_templates_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/template/switch": {
            "post": {
                "summary": "Switch Template",
                "description": "Switch the currently loaded template.",
                "operationId": "switch_template_v1_template_switch_post",
                "parameters": [
                    {
                        "name": "x-admin-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Admin-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateSwitchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/template/unload": {
            "post": {
                "summary": "Unload Template",
                "description": "Unloads the currently selected template",
                "operationId": "unload_template_v1_template_unload_post",
                "parameters": [
                    {
                        "name": "x-admin-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Admin-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/sampling/override/list": {
            "get": {
                "summary": "List Sampler Overrides",
                "description": "List all currently applied sampler overrides.\n\nRequires an admin key to see all override presets.",
                "operationId": "list_sampler_overrides_v1_sampling_override_list_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SamplerOverrideListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/sampling/overrides": {
            "get": {
                "summary": "List Sampler Overrides",
                "description": "List all currently applied sampler overrides.\n\nRequires an admin key to see all override presets.",
                "operationId": "list_sampler_overrides_v1_sampling_overrides_get",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Api-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SamplerOverrideListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/sampling/override/switch": {
            "post": {
                "summary": "Switch Sampler Override",
                "description": "Switch the currently loaded override preset",
                "operationId": "switch_sampler_override_v1_sampling_override_switch_post",
                "parameters": [
                    {
                        "name": "x-admin-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Admin-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SamplerOverrideSwitchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/sampling/override/unload": {
            "post": {
                "summary": "Unload Sampler Override",
                "description": "Unloads the currently selected override preset",
                "operationId": "unload_sampler_override_v1_sampling_override_unload_post",
                "parameters": [
                    {
                        "name": "x-admin-key",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "X-Admin-Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AuthPermissionResponse": {
                "properties": {
                    "permission": {
                        "type": "string",
                        "title": "Permission"
                    }
                },
                "type": "object",
                "required": [
                    "permission"
                ],
                "title": "AuthPermissionResponse"
            },
            "ChatCompletionImageUrl": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url"
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ],
                "title": "ChatCompletionImageUrl"
            },
            "ChatCompletionLogprob": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token"
                    },
                    "logprob": {
                        "type": "number",
                        "title": "Logprob"
                    },
                    "top_logprobs": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ChatCompletionLogprob"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top Logprobs"
                    }
                },
                "type": "object",
                "required": [
                    "token",
                    "logprob"
                ],
                "title": "ChatCompletionLogprob"
            },
            "ChatCompletionLogprobs": {
                "properties": {
                    "content": {
                        "items": {
                            "$ref": "#/components/schemas/ChatCompletionLogprob"
                        },
                        "type": "array",
                        "title": "Content"
                    }
                },
                "type": "object",
                "title": "ChatCompletionLogprobs"
            },
            "ChatCompletionMessage-Input": {
                "properties": {
                    "role": {
                        "type": "string",
                        "title": "Role",
                        "default": "user"
                    },
                    "content": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ChatCompletionMessagePart"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Content"
                    },
                    "tool_calls": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ToolCall"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tool Calls"
                    }
                },
                "type": "object",
                "title": "ChatCompletionMessage"
            },
            "ChatCompletionMessage-Output": {
                "properties": {
                    "role": {
                        "type": "string",
                        "title": "Role",
                        "default": "user"
                    },
                    "content": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ChatCompletionMessagePart"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Content"
                    },
                    "tool_calls": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ToolCall"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tool Calls"
                    }
                },
                "type": "object",
                "title": "ChatCompletionMessage"
            },
            "ChatCompletionMessagePart": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "text",
                            "image_url"
                        ],
                        "title": "Type",
                        "default": "text"
                    },
                    "text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Text"
                    },
                    "image_url": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ChatCompletionImageUrl"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "ChatCompletionMessagePart"
            },
            "ChatCompletionRequest": {
                "properties": {
                    "max_tokens": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Tokens",
                        "description": "Aliases: max_length",
                        "examples": [
                            150
                        ]
                    },
                    "min_tokens": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Min Tokens",
                        "description": "Aliases: min_length",
                        "examples": [
                            0
                        ]
                    },
                    "generate_window": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Generate Window",
                        "examples": [
                            512
                        ]
                    },
                    "stop": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stop",
                        "description": "Aliases: stop_sequence"
                    },
                    "banned_strings": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Banned Strings"
                    },
                    "banned_tokens": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Banned Tokens",
                        "description": "Aliases: custom_token_bans",
                        "examples": [
                            [
                                128,
                                330
                            ]
                        ]
                    },
                    "allowed_tokens": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allowed Tokens",
                        "description": "Aliases: allowed_token_ids",
                        "examples": [
                            [
                                128,
                                330
                            ]
                        ]
                    },
                    "token_healing": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Token Healing"
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 10.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "examples": [
                            1.0
                        ]
                    },
                    "temperature_last": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature Last"
                    },
                    "smoothing_factor": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Smoothing Factor"
                    },
                    "top_k": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": -1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top K"
                    },
                    "top_p": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top P",
                        "examples": [
                            1.0
                        ]
                    },
                    "top_a": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top A"
                    },
                    "min_p": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Min P"
                    },
                    "tfs": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tfs",
                        "examples": [
                            1.0
                        ]
                    },
                    "typical": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Typical",
                        "description": "Aliases: typical_p",
                        "examples": [
                            1.0
                        ]
                    },
                    "skew": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Skew",
                        "examples": [
                            0.0
                        ]
                    },
                    "xtc_probability": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Xtc Probability"
                    },
                    "xtc_threshold": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Xtc Threshold"
                    },
                    "frequency_penalty": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Frequency Penalty"
                    },
                    "presence_penalty": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Presence Penalty"
                    },
                    "repetition_penalty": {
                        "anyOf": [
                            {
                                "type": "number",
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Repetition Penalty",
                        "description": "Aliases: rep_pen",
                        "examples": [
                            1.0
                        ]
                    },
                    "penalty_range": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Penalty Range",
                        "description": "Aliases: repetition_range, repetition_penalty_range, rep_pen_range"
                    },
                    "repetition_decay": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Repetition Decay"
                    },
                    "dry_multiplier": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dry Multiplier"
                    },
                    "dry_base": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dry Base"
                    },
                    "dry_allowed_length": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dry Allowed Length"
                    },
                    "dry_range": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dry Range",
                        "description": "Aliases: dry_penalty_last_n"
                    },
                    "dry_sequence_breakers": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dry Sequence Breakers"
                    },
                    "mirostat": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mirostat",
                        "default": false
                    },
                    "mirostat_mode": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mirostat Mode"
                    },
                    "mirostat_tau": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mirostat Tau",
                        "examples": [
                            1.5
                        ]
                    },
                    "mirostat_eta": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mirostat Eta",
                        "examples": [
                            0.3
                        ]
                    },
                    "add_bos_token": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Add Bos Token"
                    },
                    "ban_eos_token": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ban Eos Token",
                        "description": "Aliases: ignore_eos",
                        "examples": [
                            false
                        ]
                    },
                    "skip_special_tokens": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Skip Special Tokens",
                        "examples": [
                            true
                        ]
                    },
                    "logit_bias": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "number"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logit Bias",
                        "examples": [
                            {
                                "1": 10,
                                "2": 50
                            }
                        ]
                    },
                    "negative_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Negative Prompt"
                    },
                    "json_schema": {
                        "anyOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Json Schema"
                    },
                    "regex_pattern": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Regex Pattern"
                    },
                    "grammar_string": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Grammar String"
                    },
                    "speculative_ngram": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Speculative Ngram"
                    },
                    "cfg_scale": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cfg Scale",
                        "description": "Aliases: guidance_scale",
                        "examples": [
                            1.0
                        ]
                    },
                    "max_temp": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Temp",
                        "description": "Aliases: dynatemp_high",
                        "examples": [
                            1.0
                        ]
                    },
                    "min_temp": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Min Temp",
                        "description": "Aliases: dynatemp_low",
                        "examples": [
                            1.0
                        ]
                    },
                    "temp_exponent": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temp Exponent",
                        "examples": [
                            1.0
                        ]
                    },
                    "model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model"
                    },
                    "stream": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stream",
                        "default": false
                    },
                    "stream_options": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ChatCompletionStreamOptions"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "logprobs": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logprobs"
                    },
                    "response_format": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CompletionResponseFormat"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "n": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "N"
                    },
                    "best_of": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Best Of",
                        "description": "Not parsed. Only used for OAI compliance."
                    },
                    "echo": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Echo",
                        "description": "Not parsed. Only used for OAI compliance.",
                        "default": false
                    },
                    "suffix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Suffix",
                        "description": "Not parsed. Only used for OAI compliance."
                    },
                    "user": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User",
                        "description": "Not parsed. Only used for OAI compliance."
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/components/schemas/ChatCompletionMessage-Input"
                        },
                        "type": "array",
                        "title": "Messages"
                    },
                    "prompt_template": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt Template"
                    },
                    "add_generation_prompt": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Add Generation Prompt",
                        "default": true
                    },
                    "template_vars": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Template Vars",
                        "default": {}
                    },
                    "response_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Response Prefix"
                    },
                    "tools": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ToolSpec"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tools"
                    },
                    "functions": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Functions"
                    }
                },
                "type": "object",
                "title": "ChatCompletionRequest"
            },
            "ChatCompletionRespChoice": {
                "properties": {
                    "index": {
                        "type": "integer",
                        "title": "Index",
                        "default": 0
                    },
                    "finish_reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Finish Reason"
                    },
                    "stop_str": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stop Str"
                    },
                    "message": {
                        "$ref": "#/components/schemas/ChatCompletionMessage-Output"
                    },
                    "logprobs": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ChatCompletionLogprobs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "ChatCompletionRespChoice"
            },
            "ChatCompletionResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "choices": {
                        "items": {
                            "$ref": "#/components/schemas/ChatCompletionRespChoice"
                        },
                        "type": "array",
                        "title": "Choices"
                    },
                    "created": {
                        "type": "integer",
                        "title": "Created"
                    },
                    "model": {
                        "type": "string",
                        "title": "Model"
                    },
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "chat.completion"
                    },
                    "usage": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/UsageStats"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "choices",
                    "model"
                ],
                "title": "ChatCompletionResponse"
            },
            "ChatCompletionStreamOptions": {
                "properties": {
                    "include_usage": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Include Usage",
                        "default": false
                    }
                },
                "type": "object",
                "title": "ChatCompletionStreamOptions"
            },
            "CompletionLogProbs": {
                "properties": {
                    "text_offset": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Text Offset"
                    },
                    "token_logprobs": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "number"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Token Logprobs"
                    },
                    "tokens": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tokens"
                    },
                    "top_logprobs": {
                        "items": {
                            "anyOf": [
                                {
                                    "additionalProperties": {
                                        "type": "number"
                                    },
                                    "type": "object"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Top Logprobs"
                    }
                },
                "type": "object",
                "title": "CompletionLogProbs",
                "description": "Represents log probabilities for a completion request."
            },
            "CompletionRequest": {
                "properties": {
                    "max_tokens": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Tokens",
                        "description": "Aliases: max_length",
                        "examples": [
                            150
                        ]
                    },
                    "min_tokens": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Min Tokens",
                        "description": "Aliases: min_length",
                        "examples": [
                            0
                        ]
                    },
                    "generate_window": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Generate Window",
                        "examples": [
                            512
                        ]
                    },
                    "stop": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stop",
                        "description": "Aliases: stop_sequence"
                    },
                    "banned_strings": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Banned Strings"
                    },
                    "banned_tokens": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Banned Tokens",
                        "description": "Aliases: custom_token_bans",
                        "examples": [
                            [
                                128,
                                330
                            ]
                        ]
                    },
                    "allowed_tokens": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allowed Tokens",
                        "description": "Aliases: allowed_token_ids",
                        "examples": [
                            [
                                128,
                                330
                            ]
                        ]
                    },
                    "token_healing": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Token Healing"
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 10.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "examples": [
                            1.0
                        ]
                    },
                    "temperature_last": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature Last"
                    },
                    "smoothing_factor": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Smoothing Factor"
                    },
                    "top_k": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": -1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top K"
                    },
                    "top_p": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top P",
                        "examples": [
                            1.0
                        ]
                    },
                    "top_a": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top A"
                    },
                    "min_p": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Min P"
                    },
                    "tfs": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tfs",
                        "examples": [
                            1.0
                        ]
                    },
                    "typical": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Typical",
                        "description": "Aliases: typical_p",
                        "examples": [
                            1.0
                        ]
                    },
                    "skew": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Skew",
                        "examples": [
                            0.0
                        ]
                    },
                    "xtc_probability": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Xtc Probability"
                    },
                    "xtc_threshold": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Xtc Threshold"
                    },
                    "frequency_penalty": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Frequency Penalty"
                    },
                    "presence_penalty": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Presence Penalty"
                    },
                    "repetition_penalty": {
                        "anyOf": [
                            {
                                "type": "number",
                                "exclusiveMinimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Repetition Penalty",
                        "description": "Aliases: rep_pen",
                        "examples": [
                            1.0
                        ]
                    },
                    "penalty_range": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Penalty Range",
                        "description": "Aliases: repetition_range, repetition_penalty_range, rep_pen_range"
                    },
                    "repetition_decay": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Repetition Decay"
                    },
                    "dry_multiplier": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dry Multiplier"
                    },
                    "dry_base": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dry Base"
                    },
                    "dry_allowed_length": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dry Allowed Length"
                    },
                    "dry_range": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dry Range",
                        "description": "Aliases: dry_penalty_last_n"
                    },
                    "dry_sequence_breakers": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dry Sequence Breakers"
                    },
                    "mirostat": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mirostat",
                        "default": false
                    },
                    "mirostat_mode": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mirostat Mode"
                    },
                    "mirostat_tau": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mirostat Tau",
                        "examples": [
                            1.5
                        ]
                    },
                    "mirostat_eta": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mirostat Eta",
                        "examples": [
                            0.3
                        ]
                    },
                    "add_bos_token": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Add Bos Token"
                    },
                    "ban_eos_token": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ban Eos Token",
                        "description": "Aliases: ignore_eos",
                        "examples": [
                            false
                        ]
                    },
                    "skip_special_tokens": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Skip Special Tokens",
                        "examples": [
                            true
                        ]
                    },
                    "logit_bias": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "number"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logit Bias",
                        "examples": [
                            {
                                "1": 10,
                                "2": 50
                            }
                        ]
                    },
                    "negative_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Negative Prompt"
                    },
                    "json_schema": {
                        "anyOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Json Schema"
                    },
                    "regex_pattern": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Regex Pattern"
                    },
                    "grammar_string": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Grammar String"
                    },
                    "speculative_ngram": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Speculative Ngram"
                    },
                    "cfg_scale": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cfg Scale",
                        "description": "Aliases: guidance_scale",
                        "examples": [
                            1.0
                        ]
                    },
                    "max_temp": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Temp",
                        "description": "Aliases: dynatemp_high",
                        "examples": [
                            1.0
                        ]
                    },
                    "min_temp": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Min Temp",
                        "description": "Aliases: dynatemp_low",
                        "examples": [
                            1.0
                        ]
                    },
                    "temp_exponent": {
                        "anyOf": [
                            {
                                "type": "number",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temp Exponent",
                        "examples": [
                            1.0
                        ]
                    },
                    "model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model"
                    },
                    "stream": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stream",
                        "default": false
                    },
                    "stream_options": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ChatCompletionStreamOptions"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "logprobs": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logprobs"
                    },
                    "response_format": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CompletionResponseFormat"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "n": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "N"
                    },
                    "best_of": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Best Of",
                        "description": "Not parsed. Only used for OAI compliance."
                    },
                    "echo": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Echo",
                        "description": "Not parsed. Only used for OAI compliance.",
                        "default": false
                    },
                    "suffix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Suffix",
                        "description": "Not parsed. Only used for OAI compliance."
                    },
                    "user": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User",
                        "description": "Not parsed. Only used for OAI compliance."
                    },
                    "prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Prompt"
                    }
                },
                "type": "object",
                "required": [
                    "prompt"
                ],
                "title": "CompletionRequest",
                "description": "Represents a completion request."
            },
            "CompletionRespChoice": {
                "properties": {
                    "index": {
                        "type": "integer",
                        "title": "Index",
                        "default": 0
                    },
                    "finish_reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Finish Reason"
                    },
                    "logprobs": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CompletionLogProbs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "text": {
                        "type": "string",
                        "title": "Text"
                    }
                },
                "type": "object",
                "required": [
                    "text"
                ],
                "title": "CompletionRespChoice",
                "description": "Represents a single choice in a completion response."
            },
            "CompletionResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "choices": {
                        "items": {
                            "$ref": "#/components/schemas/CompletionRespChoice"
                        },
                        "type": "array",
                        "title": "Choices"
                    },
                    "created": {
                        "type": "integer",
                        "title": "Created"
                    },
                    "model": {
                        "type": "string",
                        "title": "Model"
                    },
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "text_completion"
                    },
                    "usage": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/UsageStats"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "choices",
                    "model"
                ],
                "title": "CompletionResponse",
                "description": "Represents a completion response."
            },
            "CompletionResponseFormat": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "default": "text"
                    }
                },
                "type": "object",
                "title": "CompletionResponseFormat"
            },
            "DownloadRequest": {
                "properties": {
                    "repo_id": {
                        "type": "string",
                        "title": "Repo Id"
                    },
                    "repo_type": {
                        "type": "string",
                        "title": "Repo Type",
                        "default": "model"
                    },
                    "folder_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Folder Name"
                    },
                    "revision": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Revision"
                    },
                    "token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Token"
                    },
                    "include": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Include"
                    },
                    "exclude": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Exclude"
                    },
                    "chunk_limit": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Limit"
                    },
                    "timeout": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Timeout"
                    }
                },
                "type": "object",
                "required": [
                    "repo_id"
                ],
                "title": "DownloadRequest",
                "description": "Parameters for a HuggingFace repo download."
            },
            "DownloadResponse": {
                "properties": {
                    "download_path": {
                        "type": "string",
                        "title": "Download Path"
                    }
                },
                "type": "object",
                "required": [
                    "download_path"
                ],
                "title": "DownloadResponse",
                "description": "Response for a download request."
            },
            "DraftModelLoadRequest": {
                "properties": {
                    "draft_model_name": {
                        "type": "string",
                        "title": "Draft Model Name",
                        "description": "Aliases: name"
                    },
                    "draft_rope_scale": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Draft Rope Scale"
                    },
                    "draft_rope_alpha": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string",
                                "const": "auto"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Draft Rope Alpha",
                        "description": "Automatically calculated if set to \"auto\"",
                        "examples": [
                            1.0
                        ]
                    },
                    "draft_gpu_split": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Draft Gpu Split",
                        "examples": [
                            [
                                24.0,
                                20.0
                            ]
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "draft_model_name"
                ],
                "title": "DraftModelLoadRequest",
                "description": "Represents a draft model load request."
            },
            "EmbeddingModelLoadRequest": {
                "properties": {
                    "embedding_model_name": {
                        "type": "string",
                        "title": "Embedding Model Name",
                        "description": "Aliases: name"
                    },
                    "embeddings_device": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Embeddings Device",
                        "default": "cpu"
                    }
                },
                "type": "object",
                "required": [
                    "embedding_model_name"
                ],
                "title": "EmbeddingModelLoadRequest"
            },
            "EmbeddingObject": {
                "properties": {
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "description": "Type of the object.",
                        "default": "embedding"
                    },
                    "embedding": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Embedding",
                        "description": "Embedding values as a list of floats."
                    },
                    "index": {
                        "type": "integer",
                        "title": "Index",
                        "description": "Index of the input text corresponding to the embedding."
                    }
                },
                "type": "object",
                "required": [
                    "embedding",
                    "index"
                ],
                "title": "EmbeddingObject"
            },
            "EmbeddingsRequest": {
                "properties": {
                    "input": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Input",
                        "description": "List of input texts to generate embeddings for."
                    },
                    "encoding_format": {
                        "type": "string",
                        "title": "Encoding Format",
                        "description": "Encoding format for the embeddings. Can be 'float' or 'base64'.",
                        "default": "float"
                    },
                    "model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model",
                        "description": "Name of the embedding model to use. If not provided, the default model will be used."
                    }
                },
                "type": "object",
                "required": [
                    "input"
                ],
                "title": "EmbeddingsRequest"
            },
            "EmbeddingsResponse": {
                "properties": {
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "description": "Type of the response object.",
                        "default": "list"
                    },
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/EmbeddingObject"
                        },
                        "type": "array",
                        "title": "Data",
                        "description": "List of embedding objects."
                    },
                    "model": {
                        "type": "string",
                        "title": "Model",
                        "description": "Name of the embedding model used."
                    },
                    "usage": {
                        "$ref": "#/components/schemas/UsageInfo",
                        "description": "Information about token usage."
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "model",
                    "usage"
                ],
                "title": "EmbeddingsResponse"
            },
            "Function": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "parameters": {
                        "type": "object",
                        "title": "Parameters"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "parameters"
                ],
                "title": "Function",
                "description": "Represents a description of a tool function."
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HealthCheckResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "healthy",
                            "unhealthy"
                        ],
                        "title": "Status",
                        "description": "System health status",
                        "default": "healthy"
                    },
                    "issues": {
                        "items": {
                            "$ref": "#/components/schemas/UnhealthyEvent"
                        },
                        "type": "array",
                        "title": "Issues",
                        "description": "List of issues"
                    }
                },
                "type": "object",
                "title": "HealthCheckResponse",
                "description": "System health status"
            },
            "LoggingConfig": {
                "properties": {
                    "log_prompt": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Log Prompt",
                        "description": "Enable prompt logging (default: False).",
                        "default": false
                    },
                    "log_generation_params": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Log Generation Params",
                        "description": "Enable generation parameter logging (default: False).",
                        "default": false
                    },
                    "log_requests": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Log Requests",
                        "description": "Enable request logging (default: False).\nNOTE: Only use this for debugging!",
                        "default": false
                    }
                },
                "type": "object",
                "title": "LoggingConfig",
                "description": "Options for logging"
            },
            "LoraCard": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "default": "test"
                    },
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "lora"
                    },
                    "created": {
                        "type": "integer",
                        "title": "Created"
                    },
                    "owned_by": {
                        "type": "string",
                        "title": "Owned By",
                        "default": "tabbyAPI"
                    },
                    "scaling": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scaling"
                    }
                },
                "type": "object",
                "title": "LoraCard",
                "description": "Represents a single Lora card."
            },
            "LoraList": {
                "properties": {
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "list"
                    },
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/LoraCard"
                        },
                        "type": "array",
                        "title": "Data"
                    }
                },
                "type": "object",
                "title": "LoraList",
                "description": "Represents a list of Lora cards."
            },
            "LoraLoadInfo": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "scaling": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scaling",
                        "default": 1.0
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "LoraLoadInfo",
                "description": "Represents a single Lora load info."
            },
            "LoraLoadRequest": {
                "properties": {
                    "loras": {
                        "items": {
                            "$ref": "#/components/schemas/LoraLoadInfo"
                        },
                        "type": "array",
                        "title": "Loras"
                    },
                    "skip_queue": {
                        "type": "boolean",
                        "title": "Skip Queue",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "loras"
                ],
                "title": "LoraLoadRequest",
                "description": "Represents a Lora load request."
            },
            "LoraLoadResponse": {
                "properties": {
                    "success": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Success"
                    },
                    "failure": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Failure"
                    }
                },
                "type": "object",
                "title": "LoraLoadResponse",
                "description": "Represents a Lora load response."
            },
            "ModelCard": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "default": "test"
                    },
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "model"
                    },
                    "created": {
                        "type": "integer",
                        "title": "Created"
                    },
                    "owned_by": {
                        "type": "string",
                        "title": "Owned By",
                        "default": "tabbyAPI"
                    },
                    "logging": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LoggingConfig"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "parameters": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ModelCardParameters"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "ModelCard",
                "description": "Represents a single model card."
            },
            "ModelCardParameters": {
                "properties": {
                    "max_seq_len": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Seq Len"
                    },
                    "rope_scale": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rope Scale",
                        "default": 1.0
                    },
                    "rope_alpha": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rope Alpha",
                        "default": 1.0
                    },
                    "max_batch_size": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Batch Size",
                        "default": 1
                    },
                    "cache_size": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cache Size"
                    },
                    "cache_mode": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cache Mode",
                        "default": "FP16"
                    },
                    "chunk_size": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Size",
                        "default": 2048
                    },
                    "prompt_template": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt Template"
                    },
                    "prompt_template_content": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt Template Content"
                    },
                    "use_vision": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Use Vision",
                        "default": false
                    },
                    "draft": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ModelCard"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "ModelCardParameters",
                "description": "Represents model card parameters."
            },
            "ModelDefaultGenerationSettings": {
                "properties": {
                    "n_ctx": {
                        "type": "integer",
                        "title": "N Ctx"
                    }
                },
                "type": "object",
                "required": [
                    "n_ctx"
                ],
                "title": "ModelDefaultGenerationSettings",
                "description": "Contains default generation settings for model props."
            },
            "ModelList": {
                "properties": {
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "list"
                    },
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/ModelCard"
                        },
                        "type": "array",
                        "title": "Data"
                    }
                },
                "type": "object",
                "title": "ModelList",
                "description": "Represents a list of model cards."
            },
            "ModelLoadRequest": {
                "properties": {
                    "model_name": {
                        "type": "string",
                        "title": "Model Name",
                        "description": "Aliases: name"
                    },
                    "max_seq_len": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Seq Len",
                        "description": "Leave this blank to use the model's base sequence length",
                        "examples": [
                            4096
                        ]
                    },
                    "cache_size": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cache Size",
                        "description": "Number in tokens, must be greater than or equal to max_seq_len",
                        "examples": [
                            4096
                        ]
                    },
                    "tensor_parallel": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tensor Parallel"
                    },
                    "gpu_split_auto": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gpu Split Auto"
                    },
                    "autosplit_reserve": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Autosplit Reserve"
                    },
                    "gpu_split": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gpu Split",
                        "examples": [
                            [
                                24.0,
                                20.0
                            ]
                        ]
                    },
                    "rope_scale": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rope Scale",
                        "description": "Automatically pulled from the model's config if not present",
                        "examples": [
                            1.0
                        ]
                    },
                    "rope_alpha": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string",
                                "const": "auto"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rope Alpha",
                        "description": "Automatically calculated if set to \"auto\"",
                        "examples": [
                            1.0
                        ]
                    },
                    "cache_mode": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cache Mode"
                    },
                    "chunk_size": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Size"
                    },
                    "prompt_template": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt Template"
                    },
                    "vision": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Vision"
                    },
                    "draft_model": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DraftModelLoadRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "skip_queue": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Skip Queue",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "model_name"
                ],
                "title": "ModelLoadRequest",
                "description": "Represents a model load request."
            },
            "ModelLoadResponse": {
                "properties": {
                    "model_type": {
                        "type": "string",
                        "title": "Model Type",
                        "default": "model"
                    },
                    "module": {
                        "type": "integer",
                        "title": "Module"
                    },
                    "modules": {
                        "type": "integer",
                        "title": "Modules"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    }
                },
                "type": "object",
                "required": [
                    "module",
                    "modules",
                    "status"
                ],
                "title": "ModelLoadResponse",
                "description": "Represents a model load response."
            },
            "ModelPropsResponse": {
                "properties": {
                    "total_slots": {
                        "type": "integer",
                        "title": "Total Slots",
                        "default": 1
                    },
                    "chat_template": {
                        "type": "string",
                        "title": "Chat Template",
                        "default": ""
                    },
                    "default_generation_settings": {
                        "$ref": "#/components/schemas/ModelDefaultGenerationSettings"
                    }
                },
                "type": "object",
                "required": [
                    "default_generation_settings"
                ],
                "title": "ModelPropsResponse",
                "description": "Represents a model props response."
            },
            "SamplerOverrideListResponse": {
                "properties": {
                    "selected_preset": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Selected Preset"
                    },
                    "overrides": {
                        "type": "object",
                        "title": "Overrides",
                        "default": {}
                    },
                    "presets": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Presets"
                    }
                },
                "type": "object",
                "required": [
                    "presets"
                ],
                "title": "SamplerOverrideListResponse",
                "description": "Sampler override list response"
            },
            "SamplerOverrideSwitchRequest": {
                "properties": {
                    "preset": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Preset",
                        "description": "Pass a sampler override preset name"
                    },
                    "overrides": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Overrides",
                        "description": "Sampling override parent takes in individual keys and overrides. Ignored if preset is provided.",
                        "examples": [
                            {
                                "top_p": {
                                    "force": false,
                                    "override": 1.5
                                }
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "SamplerOverrideSwitchRequest",
                "description": "Sampler override switch request"
            },
            "TemplateList": {
                "properties": {
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "list"
                    },
                    "data": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Data"
                    }
                },
                "type": "object",
                "title": "TemplateList",
                "description": "Represents a list of templates."
            },
            "TemplateSwitchRequest": {
                "properties": {
                    "prompt_template_name": {
                        "type": "string",
                        "title": "Prompt Template Name",
                        "description": "Aliases: name"
                    }
                },
                "type": "object",
                "required": [
                    "prompt_template_name"
                ],
                "title": "TemplateSwitchRequest",
                "description": "Request to switch a template."
            },
            "TokenDecodeRequest": {
                "properties": {
                    "add_bos_token": {
                        "type": "boolean",
                        "title": "Add Bos Token",
                        "default": true
                    },
                    "encode_special_tokens": {
                        "type": "boolean",
                        "title": "Encode Special Tokens",
                        "default": true
                    },
                    "decode_special_tokens": {
                        "type": "boolean",
                        "title": "Decode Special Tokens",
                        "default": true
                    },
                    "tokens": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Tokens"
                    }
                },
                "type": "object",
                "required": [
                    "tokens"
                ],
                "title": "TokenDecodeRequest",
                "description": "\" Represents a detokenization request."
            },
            "TokenDecodeResponse": {
                "properties": {
                    "text": {
                        "type": "string",
                        "title": "Text"
                    }
                },
                "type": "object",
                "required": [
                    "text"
                ],
                "title": "TokenDecodeResponse",
                "description": "Represents a detokenization response."
            },
            "TokenEncodeRequest": {
                "properties": {
                    "add_bos_token": {
                        "type": "boolean",
                        "title": "Add Bos Token",
                        "default": true
                    },
                    "encode_special_tokens": {
                        "type": "boolean",
                        "title": "Encode Special Tokens",
                        "default": true
                    },
                    "decode_special_tokens": {
                        "type": "boolean",
                        "title": "Decode Special Tokens",
                        "default": true
                    },
                    "text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ChatCompletionMessage-Input"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Text"
                    }
                },
                "type": "object",
                "required": [
                    "text"
                ],
                "title": "TokenEncodeRequest",
                "description": "Represents a tokenization request."
            },
            "TokenEncodeResponse": {
                "properties": {
                    "tokens": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Tokens"
                    },
                    "length": {
                        "type": "integer",
                        "title": "Length"
                    }
                },
                "type": "object",
                "required": [
                    "tokens",
                    "length"
                ],
                "title": "TokenEncodeResponse",
                "description": "Represents a tokenization response."
            },
            "Tool": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "arguments": {
                        "type": "string",
                        "title": "Arguments"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "arguments"
                ],
                "title": "Tool",
                "description": "Represents an OAI tool description."
            },
            "ToolCall": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "function": {
                        "$ref": "#/components/schemas/Tool"
                    },
                    "type": {
                        "type": "string",
                        "const": "function",
                        "title": "Type"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "function",
                    "type"
                ],
                "title": "ToolCall",
                "description": "Represents an OAI tool description."
            },
            "ToolSpec": {
                "properties": {
                    "function": {
                        "$ref": "#/components/schemas/Function"
                    },
                    "type": {
                        "type": "string",
                        "const": "function",
                        "title": "Type"
                    }
                },
                "type": "object",
                "required": [
                    "function",
                    "type"
                ],
                "title": "ToolSpec",
                "description": "Wrapper for an inner tool function."
            },
            "UnhealthyEvent": {
                "properties": {
                    "time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time",
                        "description": "Time the error occurred in UTC time"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The error message",
                        "default": "Unknown error"
                    }
                },
                "type": "object",
                "title": "UnhealthyEvent",
                "description": "Represents an error that makes the system unhealthy"
            },
            "UsageInfo": {
                "properties": {
                    "prompt_tokens": {
                        "type": "integer",
                        "title": "Prompt Tokens",
                        "default": 0
                    },
                    "total_tokens": {
                        "type": "integer",
                        "title": "Total Tokens",
                        "default": 0
                    },
                    "completion_tokens": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Completion Tokens",
                        "default": 0
                    }
                },
                "type": "object",
                "title": "UsageInfo"
            },
            "UsageStats": {
                "properties": {
                    "prompt_tokens": {
                        "type": "integer",
                        "title": "Prompt Tokens"
                    },
                    "completion_tokens": {
                        "type": "integer",
                        "title": "Completion Tokens"
                    },
                    "total_tokens": {
                        "type": "integer",
                        "title": "Total Tokens"
                    }
                },
                "type": "object",
                "required": [
                    "prompt_tokens",
                    "completion_tokens",
                    "total_tokens"
                ],
                "title": "UsageStats",
                "description": "Represents usage stats."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}
